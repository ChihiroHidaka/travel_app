/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/place.js":
/*!*******************************!*\
  !*** ./resources/js/place.js ***!
  \*******************************/
/***/ (() => {

eval("var map;\nvar service;\nvar infowindow;\n\n//初期値の表示(URLに記載のコールバック関数）\nfunction initMap() {\n  var sydney = new google.maps.LatLng(-33.867, 151.195);\n  infowindow = new google.maps.InfoWindow();\n  map = new google.maps.Map(document.getElementById(\"map\"), {\n    center: sydney,\n    zoom: 15\n  });\n\n  //APIで取得したい情報\n  var request = {\n    query: \"Museum of Contemporary Art Australia\",\n    fields: [\"name\", \"place_id\", \"geometry\", \"formatted_address\"]\n  };\n  // 　console.log(request);\n\n  //findPlaceQueryにて,クエリに基づいた検索を行う\n  service = new google.maps.places.PlacesService(map);\n  service.getDetails(request, function (results, status) {\n    console.log(status); // ステータスをログとして出力\n    console.log(results); // 結果をログとして出力\n\n    if (status === google.maps.places.PlacesServiceStatus.OK && results) {\n      for (var i = 0; i < results.length; i++) {\n        createMarker(results[i]);\n      }\n      map.setCenter(results[0].geometry.location);\n    }\n  });\n}\n\n//マーカー表示\nfunction createMarker(place) {\n  //該当しないデータは処理を止める\n  if (!place.geometry || !place.geometry.location) return;\n  var marker = new google.maps.Marker({\n    map: map,\n    position: place.geometry.location\n  });\n  google.maps.event.addListener(marker, \"click\", function () {\n    infowindow.setContent(place.name || \"\");\n    infowindow.open(map);\n  });\n}\nwindow.initMap = initMap;\n\n//検索ボタンから新たな観光地を調べる\ndocument.getElementById('searchButton').addEventListener('click', function () {\n  // 入力フィールドからクエリを取得\n  var query = document.getElementById('placeSearchInput').value;\n  // 新しい検索リクエストオブジェクトを作成\n  var request = {\n    query: query,\n    fields: [\"name\", \"place_id\", \"geometry\", \"formatted_address\"]\n  };\n  // console.log(request);\n\n  //findPlaceQueryにて,クエリに基づいた検索を行う\n  service.findPlaceFromQuery(request, function (results, status) {\n    console.log(\"Status: \", status); // ステータスをログとして出力\n    console.log(\"Results: \", results); // 結果をログとして出力\n\n    if (status === google.maps.places.PlacesServiceStatus.OK && results) {\n      for (var i = 0; i < results.length; i++) {\n        createMarker(results[i]);\n        var html = \"\\n        <div>\\u540D\\u524D\\uFF1A\".concat(results[i].name, \"</div>\\n        <div>\\u5834\\u6240\\uFF1A\").concat(results[i].geometry, \"<?div>\\n        <div>\\u4F4F\\u6240\\uFF1A\").concat(results[i].formatted_address, \"</div>\\n      \");\n        document.getElementById('map').innerHTML += html;\n      }\n      map.setCenter(results[0].geometry.location);\n    }\n  });\n});\n\n// //マーカー表示\n// function createMarker(place) {\n// 　//該当しないデータは処理を止める\n//   if (!place.geometry || !place.geometry.location) return;\n\n//   const marker = new google.maps.Marker({\n//     map,\n//     position: place.geometry.location,\n//   });\n\n//   google.maps.event.addListener(marker, \"click\", () => {\n//     infowindow.setContent(place.name || \"\");\n//     infowindow.open(map);\n//   });\n// }\n\n// window.initMap = initMap;\n\n// // 初期画面\n// const key ='AIzaSyA9g-sWFwUCDm4xXcBnQU-G2b7qDlObDrY'\n// $(function(){//一つでいい\n//     navigator.geolocation.getCurrentPosition(\n//         function(position) {\n//             draw_by_address(\"東京タワー\");\n//         }\n//     );\n\n//     $('#searchButton').on(\"click\", function(){\n//         let input_address = $(\"#placeSearchInput\").val();\n//         draw_by_address(input_address);\n//     });\n\n// });\n\n// // 地名から地図を表示\n// const draw_by_address = (input_address) => { \n//     let geocoder = new google.maps.Geocoder();\n//     geocoder.geocode(\n//         {\n//             'address':  input_address\n//         }, \n//         function(results, status) { // 結果\n//             if (status === google.maps.GeocoderStatus.OK) { // ステータスがOKの場合\n//                 let map = new google.maps.Map(document.getElementById('map'), \n//                     {\n//                         center: results[0].geometry.location, // 地図の中心を指定\n//                         zoom: 15 // 地図のズームを指定\n//                     }\n//                 );\n//                 let marker = new google.maps.Marker(\n//                     {\n//                         position: results[0].geometry.location, // マーカーを立てる位置を指定\n//                         map: map // マーカーを立てる地図を指定\n//                     }\n//                 );\n\n//                 $.ajax({\n//                     type: 'GET',\n//                     cathe:false,\n//                     url: `https://maps.googleapis.com/maps/api/place/findplacefromtext/json\n//                         ?fields=name,place_id,geometry,formatted_address,url\n//                         &input=${input_address}\n//                         &inputtype=textquery\n//                         &key=key`,\n//                     dataType:'json',\n//                     })\n\n//                     //通信が成功したとき\n//                     .done(function (res){\n//                         console.log(res);//データの確認用\n//                         let infoWindow = new google.maps.InfoWindow(\n//                             { // 吹き出しの追加\n//                             content:\"<div class='maker'>\" + input_address + \"</div>\" // 吹き出しに表示する内容\n\n//                         });\n\n//                             infoWindow.open(map, marker); // 吹き出しの表示\n//                             $(\"#address\").val(input_address);\n\n//                             // let latlng = results[0].geometry.location;\n//                             // let glat = latlng.lat();\n//                             // let glng = latlng.lng();\n\n//                             // $(\"#lat\").val(glat);\n//                             // $(\"#lng\").val(glng);\n//                 })\n\n//                   //失敗した場合\n//                 .fail(function(res){\n//                     $('#weather_response').html('エラーが発生しています。確認してください');\n//                     })   \n//                     } else { // 失敗した場合\n//                 alert(status);\n//             }\n//         }\n//     );\n// };\n\n// This example requires the Places library. Include the libraries=places\n// parameter when you first load the API. For example:\n// <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\n\n/* global $ */\n/* global google */\n/* global createMarker */\n/* global initMap */\n\n// console.log(\"実行された\");\n\n// let map;\n// let service;\n// let infowindow;\n\n// $(document).ready(function() {\n//   // function initMap() {\n//     navigator.geolocation.getCurrentPosition(\n//         function(position) {\n//             // 現在地の緯度経度所得\n//             let lat = position.coords.latitude;\n//             let lng = position.coords.longitude;\n//             // draw_by_latlng(lat, lng);\n//         }\n//     );\n// }\n//   const searchButton = $(\"#searchButton\");\n\n//   searchButton.click(function() {\n//     // alert(\"クリックされた\");\n//     const keyword = $(\"#placeSearchInput\").val();\n//     // alert(keyword);\n//     const request = {\n//       query: keyword,\n//       fields: [\"name\",\"place_id\",\"geometry\",\"formatted_address\",\"url\"],\n//     };\n\n//     service.findPlaceFromQuery(request, function(results, status) {\n//       alert(\"OK\");\n//       if (status === google.maps.places.PlacesServiceStatus.OK && results) {\n//         alert(\"OK\");\n//         for (let i = 0; i < results.length; i++) {\n//           createMarker(results[i]);\n//         }\n\n//         map.setCenter(results[0].geometry.location);\n//       }\n//     });\n//   });\n// });\n\n/* global $ */\n// $(function(){\n//   const apiKey = 'AIzaSyA9g-sWFwUCDm4xXcBnQU-G2b7qDlObDrY'\n\n// 　//ボタンを押した時に関数を発生させる\n//   $('#searchButton').click(function(event){\n//     let cityName =　$('placeSeac').val();\n\n//     $.ajax({\n//       type: 'GET',\n//       cathe:false,\n//       url: `https://maps.googleapis.com/maps/api/place/findplacefromtext/json\n//             ?fields=name,place_id,geometry,formatted_address,photo,url\n//             &input=cityName\n//             &inputtype=textquery\n//             &key=${apiKey}`,\n//       dataType:'json',\n//     })\n\n//     //通信が成功したとき\n//     .done(function (res){\n//       console.log(res);//データの確認用\n\n//       // let html = `\n\n//       // `\n//       // //上記で作成したHTMLを読み込む\n//       // $('#weather_response').append(html);\n\n//       })\n\n//     //失敗した場合\n//     .fail(function(res){\n//       $('#weather_response').html('エラーが発生しています。確認してください');\n//     }) \n\n//   }) \n// })//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/place.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/place.js"]();
/******/ 	
/******/ })()
;